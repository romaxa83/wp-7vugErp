stages:
  - pre_deploy
  - testing_php
  - post_deploy

variables:
  DOCKER_TLS_CERTDIR: ""
  MYSQL_ROOT_PASSWORD: $TEST_DB_ROOTPASS
  MYSQL_DATABASE: $DB_NAME_TEST
  MYSQL_USER: $DB_USER
  MYSQL_PASSWORD: $DB_PASS
  MYSQL_ROOT_HOST: "%"
  DOCKER_HOST: "tcp://docker:2375"

cache:
  untracked: true
  key: "$CI_COMMIT_REF_NAME"
  paths:
    - www/vendor/

tag-after-deployment:
  only:
    refs:
      - master
      - develop
    variables:
      - $CI_COMMIT_TITLE =~ /^(.*)+[0-9]+.[0-9]+.[0-9]+(-[a-zA-Z0-9]+)?$/
  except:
    refs:
      - tags
  stage: pre_deploy
  image: debian:stable
  before_script:
    - apt-get clean -qq
    - apt-get update -qq --fix-missing
    - apt-get install -qq --fix-missing jq git
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "${SSH_PRIVATE_KEY}" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -p 2222 t-me.pp.ua >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - export VERSION=$(cat ./www/composer.json | jq '.version' | sed "s/\"//g")
    - git config --global user.name "${GITLAB_USER_NAME}"
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - git remote set-url origin "ssh://git@t-me.pp.ua:2222/wi1w/yiierp.git"
    - git remote -v
  script:
    - git tag -a "v${VERSION}" ${CI_COMMIT_SHA} -m "${VERSION}"
    - git push origin --tags

generate-release-note:
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TITLE =~ /^(.*)+[0-9]+.[0-9]+.[0-9]+(-[a-zA-Z0-9]+)?$/
  stage: post_deploy
  image: docker:stable
  services:
    - docker:dind
  script:
    - docker container run -e GITLAB_PERSONAL_TOKEN=${GITLAB_ACCESS_TOKEN} -e GITLAB_API_ENDPOINT=${CI_API_V4_URL} -e GITLAB_PROJECT_ID=${CI_PROJECT_ID} 00freezy00/gitlab-release-note-generator

testing_in_php:
  stage: testing_php
  tags: [yii]
  services:
    - name: mariadb:10.3
      alias: mariadb
      command: ["mysqld", "--character-set-server=utf8", "--collation-server=utf8_general_ci"]
  image: edbizarro/gitlab-ci-pipeline-php:7.1-alpine
  environment:
    name: production
  script:
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - php composer-setup.php
    - php -r "unlink('composer-setup.php');"
    - php composer.phar config -g github-oauth.github.com ${GITHUB_TOKEN}
    - php composer.phar install -d $(pwd)/www
    - php composer.phar update -d $(pwd)/www
    # Конфиги
    - cp www/config/db.php.dist www/config/db.php
    - cp www/config/test-db.php.dist www/config/test-db.php
    - sed -i -- "s~localhost~mariadb~g" www/config/test-db.php
    - sed -i -- "s~{NAME_TEST_DB}~$DB_NAME_TEST~g" www/config/test-db.php
    - sed -i -- "s~{USER}~$DB_USER~g" www/config/db.php
    - sed -i -- "s~{PASSWORD}~$DB_PASS~g" www/config/db.php
    # Инит проекта
    - php www/init --env=Production --overwrite=No
    # Test
    - cd www
    - php yii_test migrate --interactive=0
    - php yii_test seed/auth-key
    - php vendor/bin/codecept run